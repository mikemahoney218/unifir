% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_player.R
\name{add_default_player}
\alias{add_default_player}
\title{Add default player}
\usage{
add_default_player(
  script,
  player_path = NULL,
  lazy = TRUE,
  method_name = NULL,
  destination_scene = NULL,
  x_position = 0,
  y_position = 0,
  z_position = 0,
  x_scale = 1,
  y_scale = 1,
  z_scale = 1,
  x_rotation = 0,
  y_rotation = 0,
  z_rotation = 0,
  exec = TRUE
)
}
\arguments{
\item{script}{A `unifir_script` object, created by [make_script] or returned
by an `add_prop_*` function.}

\item{player_path}{The path to which the default player should be saved.
Defaults to `tools::R_user_dir("unifir")`.}

\item{lazy}{Boolean: if TRUE, unifir will attempt to only copy the files
once per run of a script; if FALSE, unifir will copy the files as many times as
requested, overwriting pre-existing files each time.}

\item{method_name}{The internal name to use for the C# method created. Will
be randomly generated if not set.}

\item{destination_scene}{Optionally, the scene to instantiate the prefabs
in. Ignored if NULL, the default.}

\item{x_position}{The position of the GameObject in
world space.}

\item{y_position}{The position of the GameObject in
world space.}

\item{z_position}{The position of the GameObject in
world space.}

\item{x_scale}{The scale of the GameObject (relative to its
parent object).}

\item{y_scale}{The scale of the GameObject (relative to its
parent object).}

\item{z_scale}{The scale of the GameObject (relative to its
parent object).}

\item{x_rotation}{The rotation of the GameObject to
create, as Euler angles.}

\item{y_rotation}{The rotation of the GameObject to
create, as Euler angles.}

\item{z_rotation}{The rotation of the GameObject to
create, as Euler angles.}

\item{exec}{Logical: Should the C# method be included in the set executed by
MainFunc?}
}
\description{
Add default player
}
